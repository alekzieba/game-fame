sudo: true
matrix:
  include:
  - os: osx
    osx_image: xcode9.4
    language: node_js
    node_js:
    - 10
    env:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
  - os: linux
    services: docker
    language: node_js
    node_js:
    - 10
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gcc-multilib
        - g++-4.8
        - g++-multilib
        - icnsutils
        - graphicsmagick
        - xz-utils
        - xorriso
        - rpm
        - libgnome-keyring-dev
before_cache:
- rm -rf $HOME/.cache/electron-builder/wine
cache:
  yarn: true
  directories:
  - node_modules
  - app/node_modules
  - "$(npm config get prefix)/lib/node_modules"
  - flow-typed
  - "$HOME/.cache/electron"
  - "$HOME/.cache/electron-builder"
  - "$HOME/docker"
before_install:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export CXX="g++-4.8"; fi
install:
- yarn
- cd app && npm rebuild && cd ..
- |
  if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    /sbin/start-stop-daemon \
    --start \
    --quiet \
    --pidfile /tmp/custom_xvfb_99.pid \
    --make-pidfile \
    --background \
    --exec /usr/bin/Xvfb \
    -- :99 -ac -screen 0 1280x1024x16
  else
    :
  fi
before_script:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export DISPLAY=:99.0; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh -e /etc/init.d/xvfb start; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sleep 3; fi
after_success:
- chmod 700 push.sh
- "./push.sh"
script:
- yarn package-ci
- yarn lint
- yarn test -u
- yarn build-e2e
env:
  global:
    secure: ObNwDc2ZdwHmochaBeMNKOUvCvRVle1ULQKZmjgxCTp+ybgwm9oHuZurCt4XDs/QkYSqcOgHAuCZx/YSh/6SE/4jA63A2q9yBSfH8hugs9aa3boSlj7x+9qt3CR+wSBjRneM8IIs8eVaazGiVTU2+Xpbm0kk4LTHu7sra7/SByq80d4OqDUMX2iC3AG4CWGCB9j+t2D9dyVPQu/KQ7n5zyrqs0to6/Zourh8Bxus7oBZ8n8pxIv25WDfX9gnVk6Lc8aSzh0UHGeP8u0q31y9p33qB3Q6BPVWJCq+I25kCh5Oj83NDDG3p6E32spK3/ul7l7MBMu4PNQ77pGCECuJVqToXpvLwWQ0Bc27YmG+Nhb5Y/YXAed5XLw8AYscPRtKlDuJLwvrlz4tpbf5LpNo1B98t/QiO9UJK5p2bLoToA9gXiDFblfEBxkiae5HifPfK0U2j4EKLar7Q1xklsIlfjF7YSNg6uGSdpYboLSQwj3vkmx97ainvBkechqynP+Pi6HzZrdu7/fTxL2MZhAgfwHMjSXPIv89KzuVhWf2sXRApzn4hNwLaRiiYUu4ajJV7mQEOIbh8dWWC04ILNTZYaL7Ox3zPNyNGMfH1kqHsGR3SlXaaQTnJKTERFjr9ySwT0SQ6RdLQcqC+edfoDyt4O2kr2Vo6pYyNS478vHT4lg=
