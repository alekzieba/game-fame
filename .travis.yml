sudo: true
matrix:
  include:
  - os: osx
    osx_image: xcode9.4
    language: node_js
    node_js:
    - node
    - 9
    env:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
  - os: linux
    services: docker
    language: node_js
    node_js:
    - node
    - 9
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gcc-multilib
        - g++-4.8
        - g++-multilib
        - icnsutils
        - graphicsmagick
        - xz-utils
        - xorriso
        - rpm
        - libgnome-keyring-dev

before_cache:
- rm -rf $HOME/.cache/electron-builder/wine
cache:
  yarn: true
  directories:
  - node_modules
  - app/node_modules
  - "$(npm config get prefix)/lib/node_modules"
  - flow-typed
  - "$HOME/.cache/electron"
  - "$HOME/.cache/electron-builder"
  - "$HOME/docker"
before_install:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export CXX="g++-4.8"; fi
install:
- yarn
- |
  if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    /sbin/start-stop-daemon \
    --start \
    --quiet \
    --pidfile /tmp/custom_xvfb_99.pid \
    --make-pidfile \
    --background \
    --exec /usr/bin/Xvfb \
    -- :99 -ac -screen 0 1280x1024x16
  else
    :
  fi
before_script:
- cd app && npm rebuild && cd ..
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export DISPLAY=:99.0; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh -e /etc/init.d/xvfb start; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sleep 3; fi
after_success:
- chmod 700 push.sh
- "./push.sh"
script:
- yarn package-ci
- yarn lint
- yarn test -u
- yarn build-e2e
env:
  global:
    secure: WaCjFk33NNxibc71EoQFvBjOFzXl/acgAMqtzijgpZqeCGJFjGhfch5h7VnLdJCLMRP7OIgylg9fr7v8asA8B1P9B4KVRRRX2lmtyjQrN/hHhm0koA3ya92k1qWco+fd1bhG3Q/A+xe/+ewI65FwKjMp4/6AvVivN3Z31CtgniKWkfQPBMC+KRbX1X6F8LodW8i6eSqcZq5ltra4gN3vJ8XgpxWHS4rC2DVpkmwaddWilUfyC6rD2b3d2UCu0mCwgXrS+vtynwbm/eIyEQEfa+1k9Fza1DQibtohMFwNaxz2PmNOPk+t8KCIfRkqXSz32ALJyPJHafBRwvxYQjmfe8pLicYRApyrGzAMlrEM2pRPbMLJAg06rJfBnsrJCgj2NO9N3hhV9Ne4eek3DK3W+rpWVlozXNRp2eihwK1Jzo1bvCrU7jFElbyPM9OOzu/FeNJb51JBmt24vYQtaZkK2Gq7wmdD/VAxSQT4dyxKobKbB6jRL7zjTzmFlx7tLjdMyv4DFE2pkzomkuE72Eww40TSY+bp+LSl55AJM99kpwg6zlENQkJpmX6MpSa2UtNUTXCZabj45nPeiQm0JFjciZS0OHMdIU6ftFjsiv+0nVyhfCNEjdfgUB32WC7u94M35f6TIIcFze0OuPrsLaQ+M3TCibRWJCoPfRHJ2F9g5/w=
